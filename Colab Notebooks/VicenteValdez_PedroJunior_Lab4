{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VicenteValdez_PedroJunior_Lab4","version":"0.3.2","provenance":[{"file_id":"1_cTyLkZyKcJPHJk2nKJnz_tkVWXdIMuO","timestamp":1550787843930},{"file_id":"1WzZSjLsfS-w9SHmTtyhdsVk89RYkLf7t","timestamp":1548028398070}],"collapsed_sections":["GTO2KMti07__","8rXFXSh11BNk","YAnuY8Sv1DoO","1foS74O01FfP","2rFY8D4Q1GsZ"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"Oyb_RNpFreOr","colab_type":"text"},"cell_type":"markdown","source":["# Lab 4: SVM + Neural Networks #\n"]},{"metadata":{"id":"yj9Uh79ereOs","colab_type":"code","colab":{}},"cell_type":"code","source":["import pandas as pd\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.svm import SVC\n","\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n","from sklearn.feature_extraction import DictVectorizer\n","\n","from sklearn.pipeline import Pipeline\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import GridSearchCV, ParameterGrid\n","\n","import numpy as np\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"n6SRFrhfreOt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":587},"outputId":"8c64f25a-4f1f-42bf-f9bc-609ad6cb87a1","executionInfo":{"status":"ok","timestamp":1551338277536,"user_tz":480,"elapsed":3518,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["!wget http://people.ischool.berkeley.edu/~zp/course_datasets/lab_4_training.csv\n","!wget http://people.ischool.berkeley.edu/~zp/course_datasets/lab_4_test.csv\n","\n","df_train = pd.read_csv('./lab_4_training.csv')\n","df_test = pd.read_csv('./lab_4_test.csv')\n","df_train.head()"],"execution_count":2,"outputs":[{"output_type":"stream","text":["--2019-02-28 07:17:53--  http://people.ischool.berkeley.edu/~zp/course_datasets/lab_4_training.csv\n","Resolving people.ischool.berkeley.edu (people.ischool.berkeley.edu)... 128.32.78.16\n","Connecting to people.ischool.berkeley.edu (people.ischool.berkeley.edu)|128.32.78.16|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 105581 (103K) [text/csv]\n","Saving to: ‘lab_4_training.csv’\n","\n","\rlab_4_training.csv    0%[                    ]       0  --.-KB/s               \rlab_4_training.csv  100%[===================>] 103.11K  --.-KB/s    in 0.06s   \n","\n","2019-02-28 07:17:53 (1.57 MB/s) - ‘lab_4_training.csv’ saved [105581/105581]\n","\n","--2019-02-28 07:17:53--  http://people.ischool.berkeley.edu/~zp/course_datasets/lab_4_test.csv\n","Resolving people.ischool.berkeley.edu (people.ischool.berkeley.edu)... 128.32.78.16\n","Connecting to people.ischool.berkeley.edu (people.ischool.berkeley.edu)|128.32.78.16|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 26523 (26K) [text/csv]\n","Saving to: ‘lab_4_test.csv’\n","\n","lab_4_test.csv      100%[===================>]  25.90K  --.-KB/s    in 0.02s   \n","\n","2019-02-28 07:17:54 (1.24 MB/s) - ‘lab_4_test.csv’ saved [26523/26523]\n","\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>year</th>\n","      <th>eyecolor</th>\n","      <th>height</th>\n","      <th>miles</th>\n","      <th>brothers</th>\n","      <th>sisters</th>\n","      <th>computertime</th>\n","      <th>exercise</th>\n","      <th>exercisehours</th>\n","      <th>musiccds</th>\n","      <th>playgames</th>\n","      <th>watchtv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1303</td>\n","      <td>male</td>\n","      <td>20</td>\n","      <td>second</td>\n","      <td>green</td>\n","      <td>73.0</td>\n","      <td>210.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>Yes</td>\n","      <td>5.0</td>\n","      <td>50.0</td>\n","      <td>1.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>36</td>\n","      <td>male</td>\n","      <td>20</td>\n","      <td>third</td>\n","      <td>other</td>\n","      <td>71.0</td>\n","      <td>90.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>15.0</td>\n","      <td>Yes</td>\n","      <td>4.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>489</td>\n","      <td>male</td>\n","      <td>22</td>\n","      <td>fourth</td>\n","      <td>hazel</td>\n","      <td>75.0</td>\n","      <td>200.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>Yes</td>\n","      <td>2.0</td>\n","      <td>150.0</td>\n","      <td>1.0</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1415</td>\n","      <td>male</td>\n","      <td>19</td>\n","      <td>second</td>\n","      <td>brown</td>\n","      <td>72.0</td>\n","      <td>35.0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>20.0</td>\n","      <td>Yes</td>\n","      <td>5.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>616</td>\n","      <td>male</td>\n","      <td>22</td>\n","      <td>fourth</td>\n","      <td>hazel</td>\n","      <td>71.0</td>\n","      <td>15.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>Yes</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0 gender  age    year eyecolor  height  miles  brothers  sisters  \\\n","0        1303   male   20  second    green    73.0  210.0         0        1   \n","1          36   male   20   third    other    71.0   90.0         1        0   \n","2         489   male   22  fourth    hazel    75.0  200.0         0        1   \n","3        1415   male   19  second    brown    72.0   35.0         2        2   \n","4         616   male   22  fourth    hazel    71.0   15.0         2        1   \n","\n","   computertime exercise  exercisehours  musiccds  playgames  watchtv  \n","0          10.0      Yes            5.0      50.0        1.0     15.0  \n","1          15.0      Yes            4.0      10.0        0.0      1.0  \n","2           1.0      Yes            2.0     150.0        1.0     10.0  \n","3          20.0      Yes            5.0     100.0        0.0      7.0  \n","4          10.0      Yes            7.0      10.0        0.0      5.0  "]},"metadata":{"tags":[]},"execution_count":2}]},{"metadata":{"id":"RGt_10ZAreOv","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 1###\n","Calculate a baseline accuracy measure using the majority class, assuming a target variable of 'gender'. The majority class is the most common value of the target variable in a particular dataset. Accuracy is calculated as (true positives + true negatives) / (all negatives and positives)"]},{"metadata":{"id":"UZPiLgekreOw","colab_type":"text"},"cell_type":"markdown","source":["** Question 1.a**  \n","Find the majority class in the training set. If you always predicted this class in the training set, what would your accuracy be?"]},{"metadata":{"id":"iYjEFc1greOx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":69},"outputId":"9976efc3-694a-41a9-bec5-9344bd1e00bc","executionInfo":{"status":"ok","timestamp":1551338277538,"user_tz":480,"elapsed":3519,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","df_train['gender'].value_counts()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["female    855\n","male      735\n","Name: gender, dtype: int64"]},"metadata":{"tags":[]},"execution_count":3}]},{"metadata":{"id":"GlQYBFJvUS2e","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"0774599b-fee2-4825-e091-78f0c07345d9","executionInfo":{"status":"ok","timestamp":1551338277544,"user_tz":480,"elapsed":3524,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["len(df_train[df_train[\"gender\"]=='female'])*100/len(df_train)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["53.77358490566038"]},"metadata":{"tags":[]},"execution_count":4}]},{"metadata":{"id":"RtvFM-hM0y2o","colab_type":"text"},"cell_type":"markdown","source":["###ANSWER: Accuracy = 53.77358490566038%"]},{"metadata":{"id":"ULPKW0IvreOy","colab_type":"text"},"cell_type":"markdown","source":["**Question 1.b**   \n","If you always predicted this same class (majority from the training set) in the test set, what would your accuracy be?"]},{"metadata":{"colab_type":"code","id":"dfU5mwh405vq","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"ce75196a-5742-424a-d3a3-e6d0628ddee7","executionInfo":{"status":"ok","timestamp":1551338277545,"user_tz":480,"elapsed":3522,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","len(df_test[df_test[\"gender\"]=='female'])*100/len(df_test)"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["52.26130653266332"]},"metadata":{"tags":[]},"execution_count":5}]},{"metadata":{"colab_type":"text","id":"pINRUJxG05v4"},"cell_type":"markdown","source":["###ANSWER: Accuracy = 52.26130653266332%"]},{"metadata":{"id":"GKb2Ju-GreO0","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 2 ###\n","Get started with Neural Networks."]},{"metadata":{"id":"UYI6e3F3reO0","colab_type":"text"},"cell_type":"markdown","source":["   \n","Choose a NN implementation (eg: scikit-learn) and specify which you choose. Be sure the implementation allows you to modify the number of hidden layers and hidden nodes per layer.  \n","\n","NOTE: When possible, specify the logsig (sigmoid/logistc) function as the transfer function (another word for activation function) for the output node and use Levenberg-Marquardt backpropagation (lbfgs). It is possible to specify logsig or logistic in Sklearn MLPclassifier (Neural net).  "]},{"metadata":{"id":"4am3sGc4reO1","colab_type":"text"},"cell_type":"markdown","source":["**Question 2.a**   \n","Train a neural network with a single 10 node hidden layer. Only use the Height feature of the dataset to predict the Gender. You will have to change Gender to a 0 and 1 class. After training, use your trained model to predict the class using the height feature from the training set. What was the accuracy of this prediction?"]},{"metadata":{"id":"Pz-R1MgJVAKq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"2cb4e8e1-44fb-4be3-88cd-bcabef6039fb","executionInfo":{"status":"ok","timestamp":1551338277546,"user_tz":480,"elapsed":3522,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["X = df_train[['height']]\n","y = df_train[['gender']]\n","\n","from sklearn import preprocessing #to transform the feature labels\n","le = preprocessing.LabelEncoder()\n","le.fit([\"male\", \"female\"])\n","y = le.transform(y['gender'])\n","print('Label Encoding', y)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Label Encoding [1 1 1 ... 0 0 1]\n"],"name":"stdout"}]},{"metadata":{"colab_type":"code","id":"jbAzltaw067l","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"89389a6e-ea28-4142-96c7-d246e9da72af","executionInfo":{"status":"ok","timestamp":1551338277802,"user_tz":480,"elapsed":3778,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","clf = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1)\n","clf.fit(X, y)\n","\n","print('Accuracy on training set', 100*clf.score(X, y), '%')"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.65408805031447 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"EuaCk0l0067q"},"cell_type":"markdown","source":["###ANSWER:  Accuracy = 84.65408805031447%"]},{"metadata":{"id":"AkqzIeshreO2","colab_type":"text"},"cell_type":"markdown","source":["**Question 2.b**  \n","Take the trained model from question 2.b and use it to predict the test set. This can be accomplished by taking the trained model and giving it the Height feature values from the test set. What is the accuracy of this model on the test set?"]},{"metadata":{"id":"6e40hKDBpXWy","colab_type":"code","colab":{}},"cell_type":"code","source":["Xtest = df_test[['height']]\n","ytest = df_test[['gender']]\n","\n","ytest = le.transform(ytest['gender'])"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"Tw25ezWp07hj","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"67602ee1-d5d9-4b56-b3c5-79e7219c2d63","executionInfo":{"status":"ok","timestamp":1551338277810,"user_tz":480,"elapsed":3784,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["print('Accuracy on test set', 100*clf.score(Xtest, ytest), '%')"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Accuracy on test set 85.42713567839196 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"HbHMAFvw07hm"},"cell_type":"markdown","source":["###ANSWER: Accuracy: 85.42713567839196 %"]},{"metadata":{"id":"uMmIfsNEreO3","colab_type":"text"},"cell_type":"markdown","source":["**Question 2.c**   \n","Neural Networks tend to prefer smaller, normalized feature values. Try taking the log of the height feature in both training and testing sets or use a Standard Scalar operation in SKlearn to centre and normalize the data between 0-1 for continuous values. Repeat question 2.c with the log version and the normalized and centered version of this feature"]},{"metadata":{"colab_type":"code","id":"wDhCZPaU07_8","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE\n","normalizer = StandardScaler()\n","\n","X_train_log = np.log(X)\n","X_train_norm = normalizer.fit_transform(X)\n","X_train_norm = pd.DataFrame(X_train_norm)\n","\n","X_test_log = np.log(Xtest)\n","X_test_norm = normalizer.fit_transform(Xtest)\n","X_test_norm = pd.DataFrame(X_test_norm)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"FiekaVaRyLDI","colab_type":"code","outputId":"ba0a26f4-ef76-4c84-b216-1974ca1972ea","executionInfo":{"status":"ok","timestamp":1551338278479,"user_tz":480,"elapsed":4415,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["#TRAINING AND TESTING WITH LOG HEIGHT\n","clflog = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1)\n","clflog.fit(X_train_log, y)\n","\n","print('Accuracy on training set', 100*clflog.score(X_train_log, y), '%')\n","\n","print('Accuracy on test set', 100*clflog.score(X_test_log, ytest), '%')"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.65408805031447 %\n","Accuracy on test set 85.42713567839196 %\n"],"name":"stdout"}]},{"metadata":{"id":"gmPt2Tai2gMr","colab_type":"code","outputId":"5c2fade3-e6e2-4d29-8b24-97ef244d160d","executionInfo":{"status":"ok","timestamp":1551338278487,"user_tz":480,"elapsed":4405,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["#TRAINING AND TESTING WITH STANDARD SCALER NORMED HEIGHT\n","clfnorm = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1)\n","clfnorm.fit(X_train_norm, y)\n","\n","print('Accuracy on training set', 100*clfnorm.score(X_train_norm, y), '%')\n","\n","print('Accuracy on test set', 100*clfnorm.score(X_test_norm, ytest), '%')"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.65408805031447 %\n","Accuracy on test set 85.42713567839196 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"GTO2KMti07__"},"cell_type":"markdown","source":["###ANSWER:  Accuracy does not change between log of height and StandardScaler of height!"]},{"metadata":{"id":"2_SlOdcarePC","colab_type":"text"},"cell_type":"markdown","source":["***\n","\n","### Question 3###\n","The rest of features in this dataset barring a few are categorical. Neither ML method accepts categorical features, so transform year, eyecolor, exercise into a set of binary features, one feature per unique original feature value, and mark the binary feature as ‘1’ if the feature value matches the original value and ‘0’ otherwise. Using only these binary variable transformed features, train and predict the class of the test set."]},{"metadata":{"id":"m_c9WZ9o9oKs","colab_type":"code","colab":{}},"cell_type":"code","source":["categorical_train = df_train.loc[:,['year','eyecolor','exercise']]\n","categorical_test = df_test.loc[:,['year','eyecolor','exercise']]\n","\n","categorical_train = pd.get_dummies(categorical_train)\n","categorical_test = pd.get_dummies(categorical_test)\n","\n","categorical_train = categorical_train.drop(labels='year_first\"', axis=1)\n","categorical_test = categorical_test.drop(labels='year_first\"', axis=1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"_jGlnavorePE","colab_type":"text"},"cell_type":"markdown","source":["**Question 3.a**    \n","What was your accuracy using Neural Network with a single 10 node hidden layer? During training, use a maximum number of iterations of 50. (Expected training time: ~15 mins)"]},{"metadata":{"colab_type":"code","id":"4qQh3NFi1BNi","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"765660db-8eb1-4908-88dc-b854b9fe8905","executionInfo":{"status":"ok","timestamp":1551338278500,"user_tz":480,"elapsed":4414,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","clfcat = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clfcat.fit(categorical_train, y)\n","\n","print('Accuracy on training set', 100*clfcat.score(categorical_train, y), '%')\n","\n","print('Accuracy on test set', 100*clfcat.score(categorical_test, ytest), '%')"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Accuracy on training set 56.855345911949684 %\n","Accuracy on test set 59.54773869346733 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"8rXFXSh11BNk"},"cell_type":"markdown","source":["###ANSWER: 56.855345911949684%"]},{"metadata":{"id":"dSSr9sBlrePG","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 4###\n","Using a NN, report the accuracy on  the test set of a model that trained only on the height and the eye color features of instances in the training set."]},{"metadata":{"id":"mJjKE-u_h_V5","colab_type":"code","colab":{}},"cell_type":"code","source":["eyeencoded_train = categorical_train.iloc[:,5:10]\n","height_eye_train = pd.concat([X, eyeencoded_train], axis=1)\n","\n","eyeencoded_test = categorical_test.iloc[:,5:10]\n","height_eye_test = pd.concat([Xtest, eyeencoded_test], axis=1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"rMNSlOmJrePG","colab_type":"text"},"cell_type":"markdown","source":["**Question 4.a**  \n","What is the accuracy on the test set using the original height values (no pre-processing) and eye color as a one-hot?"]},{"metadata":{"id":"WhnNZpxAgx56","colab_type":"code","outputId":"b1c3fccb-b2a8-4475-f306-a9402cea1468","executionInfo":{"status":"ok","timestamp":1551338278765,"user_tz":480,"elapsed":4651,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["clf_height_eye = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_height_eye.fit(height_eye_train, y)\n","\n","print('Accuracy on training set', 100*clf_height_eye.score(height_eye_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_height_eye.score(height_eye_test, ytest), '%')"],"execution_count":16,"outputs":[{"output_type":"stream","text":["Accuracy on training set 69.62264150943396 %\n","Accuracy on test set 71.35678391959799 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"CaL2o0TW1Cks"},"cell_type":"markdown","source":["###ANSWER: 71.35678391959799%"]},{"metadata":{"id":"NC8Ipx9QrePH","colab_type":"text"},"cell_type":"markdown","source":["**Question 4.b**  \n","What is the accuracy on the test set using the log of height values (applied to both training and testing sets) and eye color as a one-hot?"]},{"metadata":{"colab_type":"code","id":"cFvzNv6O1DG3","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE\n","logheight_eye_train = pd.concat([X_train_log, eyeencoded_train], axis=1)\n","logheight_eye_test = pd.concat([X_test_log, eyeencoded_test], axis=1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"aGNtaxb9lYN1","colab_type":"code","outputId":"07b7fd09-6cd4-4556-a821-a213ae63d611","executionInfo":{"status":"ok","timestamp":1551338278790,"user_tz":480,"elapsed":4654,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["clf_logheight_eye = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_logheight_eye.fit(logheight_eye_train, y)\n","\n","print('Accuracy on training set', 100*clf_logheight_eye.score(logheight_eye_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_logheight_eye.score(logheight_eye_test, ytest), '%')"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.46540880503144 %\n","Accuracy on test set 85.678391959799 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"Pt3NMp1M1DG4"},"cell_type":"markdown","source":["###ANSWER: 85.678391959799%"]},{"metadata":{"id":"iYm2jqnprePI","colab_type":"text"},"cell_type":"markdown","source":["\n","**Question 4.c**  \n","What is the accuracy on the test set using the Z-score of height values and eye color as a one-hot? \n","\n","Z-score is a normalization function. It is the value of a feature minus the average value for that feature (in the training set), divided by the standard deviation of that feature (in the training set). Remember that, whenever applying a function to a feature in the training set, it also has to be applied to that same feature in the test set."]},{"metadata":{"colab_type":"code","id":"P3mDjF6N1DoN","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE\n","from scipy.stats import zscore\n","\n","zscore_height_train = X.apply(zscore)\n","zscore_height_test = Xtest.apply(zscore)\n","\n","zscore_train = pd.concat([zscore_height_train, eyeencoded_train], axis=1)\n","zscore_test = pd.concat([zscore_height_test, eyeencoded_test], axis=1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"gQt7oE95sYuQ","colab_type":"code","outputId":"825c325b-bd36-4ee1-ff94-bb6e396c1d35","executionInfo":{"status":"ok","timestamp":1551338279169,"user_tz":480,"elapsed":5012,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["clf_z = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_z.fit(zscore_train, y)\n","\n","print('Accuracy on training set', 100*clf_z.score(zscore_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_z.score(zscore_test, ytest), '%')"],"execution_count":20,"outputs":[{"output_type":"stream","text":["Accuracy on training set 85.34591194968554 %\n","Accuracy on test set 86.93467336683418 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"YAnuY8Sv1DoO"},"cell_type":"markdown","source":["###ANSWER: 86.93467336683418 %"]},{"metadata":{"id":"Fh9qwu_9rePJ","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 5 ###\n","Repeat question 5 for exercise hours + eye color"]},{"metadata":{"id":"gzG24q3kw_BT","colab_type":"text"},"cell_type":"markdown","source":["NOTE: CANNOT PERFORM THE EQUVALENT OF 5B SINCE APPLYING LOG OF EXERCISE WOULD GENERATE 1's and infinites. \n","\n"]},{"metadata":{"colab_type":"code","id":"JAgHz_r-1EMR","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"a2e9ce4c-c8eb-4291-dce8-f7ca9b405efb","executionInfo":{"status":"ok","timestamp":1551338279172,"user_tz":480,"elapsed":5010,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE - QUESTION 5A - UNPROCESSED HOURS\n","hours_eye_train = categorical_train.iloc[:,5:12]\n","hours_eye_test = categorical_test.iloc[:,5:12]\n","\n","clf_hours_eye = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_hours_eye.fit(hours_eye_train, y)\n","\n","print('Accuracy on training set', 100*clf_hours_eye.score(hours_eye_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_hours_eye.score(hours_eye_test, ytest), '%')"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Accuracy on training set 54.339622641509436 %\n","Accuracy on test set 54.2713567839196 %\n"],"name":"stdout"}]},{"metadata":{"id":"NV15hlx7ySNx","colab_type":"code","outputId":"826975e3-a97d-4899-d13e-a0a125355bef","executionInfo":{"status":"ok","timestamp":1551338279176,"user_tz":480,"elapsed":4998,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["# YOUR CODE HERE - QUESTION 5C - ZSCORE HOURS\n","zscore_ex_train = hours_eye_train.iloc[:,5:7].apply(zscore)\n","zscore_ex_test = hours_eye_test.iloc[:,5:7].apply(zscore)\n","\n","zscore_ex_train = pd.concat([eyeencoded_train, zscore_ex_train], axis=1)\n","zscore_ex_test = pd.concat([eyeencoded_test, zscore_ex_test], axis=1)\n","\n","clf_zhours = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_zhours.fit(zscore_ex_train, y)\n","\n","print('Accuracy on training set', 100*clf_zhours.score(zscore_ex_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_zhours.score(zscore_ex_test, ytest), '%')"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Accuracy on training set 54.339622641509436 %\n","Accuracy on test set 54.2713567839196 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"ZlDfGvy61EMS"},"cell_type":"markdown","source":["###ANSWER: Accuracy does not change between unprocessed exercise hours and zscaled exercise hours. This makes sense since ex. hours only consists on 0's and 1's. The zscaler wiill therefore just have substitute values for +- 1.292726 and +- 0.773559."]},{"metadata":{"id":"JYVuaPWgrePL","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 6###\n","Combine the features from question 4, 5, and exercise hours from question 6 (using the best normalization feature set form questions 5 and 6)"]},{"metadata":{"id":"1iAiFhlFrePM","colab_type":"text"},"cell_type":"markdown","source":["**Question 6.a**  \n","What was the NN accuracy on the test set using the single 10 node hidden layer?"]},{"metadata":{"id":"nCec8kKj1LGf","colab_type":"text"},"cell_type":"markdown","source":["Assuming question means taking the features from question 4 and 5 and NOT 6 since 6 relates to the present question. Therefore we will be taking the zscored height, one_hot encoded eyecolor and one_hot encoded exercise hours."]},{"metadata":{"id":"wGk7Zpzv1iOq","colab_type":"code","colab":{}},"cell_type":"code","source":["q6_train = pd.concat([zscore_height_train, hours_eye_train], axis=1)\n","q6_test = pd.concat([zscore_height_test, hours_eye_test], axis=1)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"QuLJ6sTB1FfN","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"af7b4098-3c9e-4447-888b-bb827b3c38a0","executionInfo":{"status":"ok","timestamp":1551338279498,"user_tz":480,"elapsed":5311,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE - TAKING THE ZSCORE HOURS FROM QUESTION 5C - ZSCORE EX. HOURS\n","clf_6 = MLPClassifier(solver='lbfgs', activation='logistic', hidden_layer_sizes=(10,), random_state=1, max_iter=50)\n","clf_6.fit(q6_train, y)\n","\n","print('Accuracy on training set', 100*clf_6.score(q6_train, y), '%')\n","\n","print('Accuracy on test set', 100*clf_6.score(q6_test, ytest), '%')"],"execution_count":24,"outputs":[{"output_type":"stream","text":["Accuracy on training set 85.15723270440252 %\n","Accuracy on test set 86.68341708542714 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"1foS74O01FfP"},"cell_type":"markdown","source":["###ANSWER: 86.68341708542714%"]},{"metadata":{"id":"Jusc-kofrePP","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 7- Bonus (10%)###\n","Can you improve your test set prediction accuracy by 5% or more?  \n","\n","See how close to that milestone of improvement you can get by modifying the tuning parameters of  Neural Networks (the number of hidden layers, number of hidden nodes in each layer, the learning rate aka mu). A great guide to tuning parameters is explained in this guide: http://www.csie.ntu.edu.tw/~cjlin/papers/guide/guide.pdf. \n","\n","While the guide is specific to SVM and in particular the C and gamma parameters of the RBF kernel, the method applies to generally to any ML technique with tuning parameters.\n","\n","Please also write a paragraph in a markdown cell below with an explanation of your approach and evaluation metrics.\n"]},{"metadata":{"id":"wMaF4O8K_7ql","colab_type":"code","outputId":"1d13e83e-341f-4a58-d852-730c9fb1c82d","executionInfo":{"status":"ok","timestamp":1551338501100,"user_tz":480,"elapsed":226891,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":1448}},"cell_type":"code","source":["from sklearn.neural_network import MLPClassifier\n","mlp = MLPClassifier(max_iter=100)\n","\n","parameter_space = {\n","    'hidden_layer_sizes': [(50,50,50), (50,100,50),(10,50,10), (10,), (100,)],\n","    'activation': ['tanh', 'relu'],\n","    'solver': ['sgd', 'adam'],\n","    'alpha': [0.0001, 0.05],\n","    'learning_rate': ['constant','adaptive'],\n","}\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","clf = GridSearchCV(mlp, parameter_space, n_jobs=-1, cv=3)\n","clf.fit(q6_train, y)\n","\n","# Best paramete set\n","print('Best parameters found:\\n', clf.best_params_)\n","\n","# All results\n","means = clf.cv_results_['mean_test_score']\n","stds = clf.cv_results_['std_test_score']\n","for mean, std, params in zip(means, stds, clf.cv_results_['params']):\n","    print(\"%0.3f (+/-%0.03f) for %r\" % (mean, std * 2, params))"],"execution_count":25,"outputs":[{"output_type":"stream","text":["Best parameters found:\n"," {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.848 (+/-0.012) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.840 (+/-0.011) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.845 (+/-0.003) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.843 (+/-0.016) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.849 (+/-0.008) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.844 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.847 (+/-0.003) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.847 (+/-0.009) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.844 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.847 (+/-0.003) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.847 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.847 (+/-0.003) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.842 (+/-0.009) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.845 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.850 (+/-0.012) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.847 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.845 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.848 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.847 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.845 (+/-0.003) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.847 (+/-0.002) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.843 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.849 (+/-0.008) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.844 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.850 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.843 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.848 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.840 (+/-0.011) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.848 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.843 (+/-0.004) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.842 (+/-0.016) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.849 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.844 (+/-0.020) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.849 (+/-0.008) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.836 (+/-0.012) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.847 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.848 (+/-0.005) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.848 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.850 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.848 (+/-0.006) for {'activation': 'tanh', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.840 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.843 (+/-0.006) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.838 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.843 (+/-0.005) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.848 (+/-0.010) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.846 (+/-0.011) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.842 (+/-0.006) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.842 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.838 (+/-0.002) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.841 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.819 (+/-0.070) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.842 (+/-0.022) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.828 (+/-0.037) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.849 (+/-0.019) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.823 (+/-0.043) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.850 (+/-0.006) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.845 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.848 (+/-0.005) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.844 (+/-0.008) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.843 (+/-0.005) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.840 (+/-0.002) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.846 (+/-0.009) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.850 (+/-0.008) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.842 (+/-0.009) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 50, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.844 (+/-0.004) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.841 (+/-0.009) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.845 (+/-0.009) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.840 (+/-0.008) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (50, 100, 50), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.826 (+/-0.027) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.847 (+/-0.008) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.821 (+/-0.028) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.842 (+/-0.008) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10, 50, 10), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.831 (+/-0.018) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.848 (+/-0.006) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.842 (+/-0.039) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.849 (+/-0.005) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n","0.838 (+/-0.012) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'sgd'}\n","0.847 (+/-0.006) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'solver': 'adam'}\n","0.844 (+/-0.004) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'sgd'}\n","0.847 (+/-0.008) for {'activation': 'relu', 'alpha': 0.05, 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'solver': 'adam'}\n"],"name":"stdout"}]},{"metadata":{"id":"7V_reEmeAg3e","colab_type":"code","outputId":"c66d148c-1b98-42b2-b8d3-9a6faf2b6477","executionInfo":{"status":"ok","timestamp":1551338501101,"user_tz":480,"elapsed":226862,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":191}},"cell_type":"code","source":["y_true, y_pred = ytest , clf.predict(q6_test)\n","\n","from sklearn.metrics import classification_report\n","print('Results on the test set:')\n","print(classification_report(y_true, y_pred))"],"execution_count":26,"outputs":[{"output_type":"stream","text":["Results on the test set:\n","              precision    recall  f1-score   support\n","\n","           0       0.85      0.89      0.87       208\n","           1       0.87      0.83      0.85       190\n","\n","   micro avg       0.86      0.86      0.86       398\n","   macro avg       0.86      0.86      0.86       398\n","weighted avg       0.86      0.86      0.86       398\n","\n"],"name":"stdout"}]},{"metadata":{"id":"PiO5bOymC0zq","colab_type":"text"},"cell_type":"markdown","source":["Even if I wanted to overfit the dataset, I can't seem to do it. With other simpler models like Desicion Trees we can in theory overfit the data by maximizing depth, etc. Here, even doing a grid search through different number of nodes and layers, different activation functions and different learning rate methods the upper limit is always 0.86. I understand this is not a 5% improvement but it would be nice if as a comment you could explain to me how to overfit a model like MLP (imagining I wanted to do it on purpose). Thank you!"]},{"metadata":{"colab_type":"text","id":"2rFY8D4Q1GsZ"},"cell_type":"markdown","source":["###ANSWER: Maximum precision of 0.86%"]},{"metadata":{"id":"3qUqBKicreO4","colab_type":"text"},"cell_type":"markdown","source":["***\n","### Question 8 (Bonus: 20%) ###\n","Get started with Support Vector Machines."]},{"metadata":{"id":"pNYLaAhureO5","colab_type":"text"},"cell_type":"markdown","source":["  \n","Chose a SVM implementation and specify which you choose. Be sure the implementation allows you to choose between linear and RBF kernels."]},{"metadata":{"id":"1hAV-qKdreO5","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.a**   \n","Use the same dataset from 2.a using the linear kernel to find training set prediction accuracy."]},{"metadata":{"colab_type":"code","id":"m3XM3euo08oN","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"5e450f7d-33db-44d6-bb21-ef3ea88abe2f","executionInfo":{"status":"ok","timestamp":1551338501103,"user_tz":480,"elapsed":226860,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","from sklearn.svm import SVC\n","\n","clf_svm = SVC(kernel='linear', gamma='auto')\n","clf_svm.fit(X, y) \n","\n","print('Accuracy on training set', 100*clf_svm.score(X, y), '%')"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Accuracy on training set 83.39622641509435 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"KEqCSegT08oV"},"cell_type":"markdown","source":["###ANSWER: 83.39622641509435%"]},{"metadata":{"id":"96Fl7LQUreO7","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.b**   \n","Use the same dataset from 2.a using the linear kernel to find test set prediction accuracy"]},{"metadata":{"colab_type":"code","id":"QgEJ14y209KT","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"2374c450-2f60-4301-ef7d-97179e0793cc","executionInfo":{"status":"ok","timestamp":1551338501104,"user_tz":480,"elapsed":226858,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","print('Accuracy on test set', 100*clf_svm.score(Xtest, ytest), '%')"],"execution_count":28,"outputs":[{"output_type":"stream","text":["Accuracy on test set 83.16582914572864 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"Ne9ORE8J09KY"},"cell_type":"markdown","source":["###ANSWER: 83.16582914572864%"]},{"metadata":{"id":"XWNy8vVdreO8","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.c**   \n","Use the same dataset from 2.a using the RBF kernel  to find training set prediction accuracy"]},{"metadata":{"colab_type":"code","id":"e4_R8m1609v6","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"cb2cd5df-cdd8-4665-d26d-f21ae7b2332b","executionInfo":{"status":"ok","timestamp":1551338501321,"user_tz":480,"elapsed":227075,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","clf_rbf = SVC(kernel='rbf', gamma='auto')\n","clf_rbf.fit(X, y) \n","\n","print('Accuracy on training set', 100*clf_rbf.score(X, y), '%')"],"execution_count":29,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.65408805031447 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"zeao7-OV09wB"},"cell_type":"markdown","source":["###ANSWER: 84.65408805031447%"]},{"metadata":{"id":"oeaE1JffreO-","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.d**   \n","Use the same dataset from 2.a using the RBF kernel  to find test set prediction accuracy"]},{"metadata":{"colab_type":"code","id":"S3IuICJm0-2E","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a34b3c14-4abf-46cb-ccfa-387cc5383159","executionInfo":{"status":"ok","timestamp":1551338501322,"user_tz":480,"elapsed":227075,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","print('Accuracy on test set', 100*clf_rbf.score(Xtest, ytest), '%')"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Accuracy on test set 85.42713567839196 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"_XL_S1vQ0-2L"},"cell_type":"markdown","source":["###ANSWER: 85.42713567839196%"]},{"metadata":{"id":"SuqdVvlrreO_","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.e**   \n","Use the same dataset from 2.c (log) using the RBF to find test set prediction accuracy"]},{"metadata":{"colab_type":"code","id":"USVRMcUT0_T3","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"d8bfd984-b341-4401-af40-2984383f2ca3","executionInfo":{"status":"ok","timestamp":1551338501549,"user_tz":480,"elapsed":227301,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","clf_rbf_log = SVC(kernel='rbf', gamma='auto')\n","clf_rbf_log.fit(X_train_log, y) \n","\n","print('Accuracy on training set', 100*clf_rbf_log.score(X_train_log, y), '%')\n","\n","print('Accuracy on test set', 100*clf_rbf.score(X_test_log, ytest), '%')"],"execution_count":31,"outputs":[{"output_type":"stream","text":["Accuracy on training set 84.65408805031447 %\n","Accuracy on test set 52.26130653266332 %\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"wp8n_kUc0_T8"},"cell_type":"markdown","source":["###ANSWER: 52.26130653266332%"]},{"metadata":{"id":"Oo9CZNDYrePB","colab_type":"text"},"cell_type":"markdown","source":["**Question 8.f**   \n","Z-score is a normalization technique. It is the value of a feature minus the average value for that feature in the training set, divided by the standard deviation of that feature in the training set. Repeat question 3.e using Z-score and note if there is any difference in accuracy and comment on why there is a change or no change in accuracy"]},{"metadata":{"colab_type":"code","id":"HGPofGGm0_tx","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a247be8a-6548-4b84-ecb5-b4c184821dea","executionInfo":{"status":"ok","timestamp":1551338501551,"user_tz":480,"elapsed":227302,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["# YOUR CODE HERE\n","print('LOOK BELOW')"],"execution_count":32,"outputs":[{"output_type":"stream","text":["LOOK BELOW\n"],"name":"stdout"}]},{"metadata":{"id":"ZenMlVEzL-Kx","colab_type":"text"},"cell_type":"markdown","source":["Question 3.e does not exist. Assuming you are dealing with an attribute consisting only in 0's and 1's the accuracy will not change even if a zscaler method is implemented. This was demonstrated in question 5. In question 5 the answer was:\n","\n","Accuracy does not change between unprocessed exercise hours and zscaled exercise hours. This makes sense since ex. hours only consists on 0's and 1's. The zscaler wiill therefore just have substitute values for +- 1.292726 and +- 0.773559."]},{"metadata":{"colab_type":"text","id":"Aw1fJ59W0_t3"},"cell_type":"markdown","source":["###ANSWER: DOES NOT CHANGE!"]}]}