{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of VicenteValdez_PedroJunior_Lab3","version":"0.3.2","provenance":[{"file_id":"1VgVFu82DeKc-3sIuLeKuY9lV9-zAvbuk","timestamp":1550360021029},{"file_id":"1HXAmxXrZ7vzmQrIj52huNiA5Zz5hNVm6","timestamp":1550187954598},{"file_id":"1AD5XZ5iNJd8d-a90Jsn75nl1Y0kFo7qZ","timestamp":1547766865352}],"collapsed_sections":["uhUN5gHu56UW","taURI_cL57A_","WIUfrsOr57kn","_pkTgJ_W586F"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"metadata":{"id":"FQW606Cx5qp8","colab_type":"text"},"cell_type":"markdown","source":["# Lab 3 - Decision Trees"]},{"metadata":{"id":"GT_YKrnS5qp_","colab_type":"text"},"cell_type":"markdown","source":["This assignment uses a dataset obtained from the JSE Data Archive that contains biological and self-reported activity traits of a sample of college students at a single university uploaded in 2013. The study associated with these data focused on exploring if a correspondence exists between eye color and and other traits. You will also be using eye color as the target/label in this lab.\n","\n","FEATURE DESCRIPTIONS: \n","\n","<ul>\n","<li>Color (Blue, Brown, Green, Hazel, Other)\n","<li>Age (in years)\n","<li>YearinSchool (First, Second, Third, Fourth, Other)\n","<li>Height (in inches)\n","<li>Miles (distance from home town of student to Ames, IA) \n","<li>Brothers (number of brothers)\n","<li>Sisters (number of sisters)\n","<li>CompTime (number of hours spent on computer per week)\n","<li>Exercise (whether the student exercises Yes or No)\n","<li>ExerTime (number of hours spent exercising per week)\n","<li>MusicCDs (number of music CDs student owns)\n","<li>PlayGames (number of hours spent playing games per week)\n","<li>WatchTV (number of hours spent watching TV per week\n","</ul>\n","\n","https://ww2.amstat.org/publications/jse/jse_data_archive.htm (eyecolorgenderdata.csv)"]},{"metadata":{"id":"wzDd32MW5qqB","colab_type":"code","outputId":"312af217-92c0-4755-aaf2-e9f10e10de02","executionInfo":{"status":"ok","timestamp":1550358492769,"user_tz":480,"elapsed":7454,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":299}},"cell_type":"code","source":["from collections import Counter, defaultdict\n","from itertools import combinations \n","import pandas as pd\n","import numpy as np\n","import operator\n","\n","from random import seed\n","from random import randrange\n","from csv import reader\n","\n","import sklearn\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.feature_extraction import DictVectorizer #to turn categorial variables into numeric arrays\n","from sklearn import preprocessing #to transform the feature labels\n","from sklearn.metrics import accuracy_score\n","\n","!wget http://people.ischool.berkeley.edu/~zp/course_datasets/eye_color.zip\n","!unzip eye_color.zip\n","!ls\n"," "],"execution_count":145,"outputs":[{"output_type":"stream","text":["--2019-02-16 23:08:03--  http://people.ischool.berkeley.edu/~zp/course_datasets/eye_color.zip\n","Resolving people.ischool.berkeley.edu (people.ischool.berkeley.edu)... 128.32.78.16\n","Connecting to people.ischool.berkeley.edu (people.ischool.berkeley.edu)|128.32.78.16|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 23344 (23K) [application/zip]\n","Saving to: ‘eye_color.zip.2’\n","\n","\reye_color.zip.2       0%[                    ]       0  --.-KB/s               \reye_color.zip.2     100%[===================>]  22.80K  --.-KB/s    in 0.02s   \n","\n","2019-02-16 23:08:03 (1019 KB/s) - ‘eye_color.zip.2’ saved [23344/23344]\n","\n","Archive:  eye_color.zip\n","replace Eye_Color.csv? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n","replace Eye_Color_Dataset_Description.txt? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n","Eye_Color.csv\t\t\t   eye_color.zip    eye_color.zip.2\n","Eye_Color_Dataset_Description.txt  eye_color.zip.1  sample_data\n"],"name":"stdout"}]},{"metadata":{"id":"6hHo01gA5qqJ","colab_type":"code","colab":{}},"cell_type":"code","source":["df = pd.read_csv('Eye_Color.csv')\n","\n","# remove NA's and reset the index\n","df = df.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\n","df = df.reset_index(drop=True)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"D3YHRVXl5qqP","colab_type":"text"},"cell_type":"markdown","source":["# Calculating Gini Index "]},{"metadata":{"id":"pNGeSsrX5qqR","colab_type":"text"},"cell_type":"markdown","source":["\n","\n","**Question 1: How many rows are there in the dataset for males? For females? **\n","\n"]},{"metadata":{"id":"24SFBRyz5qqS","colab_type":"code","outputId":"69f963a7-832e-48ed-eb52-330ac0464f12","executionInfo":{"status":"ok","timestamp":1550358537626,"user_tz":480,"elapsed":308,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["# Gives counts of females and males in entire dataframe\n","df.gender.value_counts()"],"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["female    1078\n","male       910\n","Name: gender, dtype: int64"]},"metadata":{"tags":[]},"execution_count":147}]},{"metadata":{"id":"4m5UcNuc5oIj","colab_type":"text"},"cell_type":"markdown","source":["###Answer: 1078 for Females and 910 for Males"]},{"metadata":{"id":"P46g8D0Z5qqY","colab_type":"text"},"cell_type":"markdown","source":["**Question 2: What is the Gini Index of this dataset, using males and females as the target classes?**"]},{"metadata":{"id":"bHBs8Cf8d6yb","colab_type":"text"},"cell_type":"markdown","source":["The gini index is given by:\n","\n","$$ Gini(D) = 1 - \\sum{p_i ^2} \\space where \\space  p_i ^2 = \\frac{\\mid C_i \\mid}{\\mid D \\mid}$$"]},{"metadata":{"colab_type":"code","id":"fUhrDbIa5yiw","outputId":"665f2a62-a5bd-49d7-e495-af8fc12e6ece","executionInfo":{"status":"ok","timestamp":1550358584781,"user_tz":480,"elapsed":296,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["# YOUR CODE HERE\n","malerows = (df.iloc[:,0] == 'male').sum() #counts of males in the df\n","femalerows = (df.iloc[:,0] == 'female').sum() #counts of females in df\n","totalrows = malerows + femalerows #total counts\n","ginidf = 1 - (malerows/totalrows)**2 - (femalerows/totalrows)**2 #gini formula\n","print('The gini index is {:.6f}'.format(ginidf))"],"execution_count":148,"outputs":[{"output_type":"stream","text":["The gini index is 0.496429\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"cKQdyyhi5yi1"},"cell_type":"markdown","source":["###Answer: 0.496429"]},{"metadata":{"id":"bf3_EPIF5qqe","colab_type":"text"},"cell_type":"markdown","source":["## Best Split of a Numeric Feature"]},{"metadata":{"id":"01CA4jWM5qqf","colab_type":"text"},"cell_type":"markdown","source":["**Question 3: What is the best split point of the 'height' feature. **"]},{"metadata":{"id":"LzVvKB6yk8Sd","colab_type":"text"},"cell_type":"markdown","source":["The best split is given by the Gini index:\n","\n","$$ Gini_{height}(D) = \\frac{\\mid D_1 \\mid}{\\mid D \\mid} Gini(D_1) + \\frac{\\mid D_2 \\mid}{\\mid D \\mid} Gini(D_2) $$\n","\n","where $D_i$ is the partition. The best split will be the one were the Gini index is the lowest."]},{"metadata":{"id":"J4JRd-AgD5DW","colab_type":"code","colab":{}},"cell_type":"code","source":["ordered = df.sort_values(by='height') #sort dataframe by height\n","ordered = ordered.reset_index()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"uE51gCWODI28","colab_type":"code","colab":{}},"cell_type":"code","source":["splitpoints = {} #start new list to store for loop results\n","\n","for row in range(1,len(ordered.height)):\n","  #rows represent split point\n","  #GINI CALCULATION FORMULA\n","  gini_d1 = 1 - ((ordered.iloc[0:row,1] == 'male').sum()/ordered.iloc[0:row,1].count())**2- (\n","      (ordered.iloc[0:row,1] == 'female').sum()/ordered.iloc[0:row,1].count())**2\n","  gini_d2 = 1 - ((ordered.iloc[row:,1] == 'male').sum()/ordered.iloc[row:,1].count())**2- (\n","      (ordered.iloc[row:,1] == 'female').sum()/ordered.iloc[row:,1].count())**2\n","  d1count = ordered.iloc[0:row,1].count()\n","  d2count = ordered.iloc[row:,1].count()\n","  totd1d2 = d1count + d2count\n","  gini = (d1count/totd1d2)*gini_d1 + (d2count/totd1d2)*gini_d2\n","  \n","  #IMPURITY CALCULATION\n","  change = ginidf - gini\n","  \n","  #SPLIT POINT\n","  heightpoint = ordered.iloc[row,5]\n","  \n","  #ADDING TO DICTIONARY\n","  splitpoints[row] = [row,gini_d1,gini_d2,gini,change,heightpoint]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"JxJLHdO2WApT","colab_type":"code","colab":{}},"cell_type":"code","source":["split = pd.DataFrame.from_dict(splitpoints, orient='index') #CONVERTING DICT TO A DATAFRAME\n","split.columns = ['row','gini_d1','gini_d2','gini','change','height'] #NAME OF THE COLUMNS"],"execution_count":0,"outputs":[]},{"metadata":{"id":"1UOqp_YjWOks","colab_type":"code","outputId":"5ef66d12-3513-431b-d2b8-15b80c6fa84f","executionInfo":{"status":"ok","timestamp":1550359169485,"user_tz":480,"elapsed":415,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":140}},"cell_type":"code","source":["split.loc[split['change'].idxmax()] #IDENTIFIYING MAXIMUM"],"execution_count":152,"outputs":[{"output_type":"execute_result","data":{"text/plain":["row        1079.000000\n","gini_d1       0.247351\n","gini_d2       0.282882\n","gini          0.263597\n","change        0.232832\n","height       69.000000\n","Name: 1079, dtype: float64"]},"metadata":{"tags":[]},"execution_count":152}]},{"metadata":{"colab_type":"text","id":"GLtVotMH5ziP"},"cell_type":"markdown","source":["###Answer: 69 in the 1079 row"]},{"metadata":{"id":"DIC0fZ7p5qqg","colab_type":"text"},"cell_type":"markdown","source":["**Question 4: What is the Gini Index of this best split?**"]},{"metadata":{"colab_type":"code","id":"8psESdw050M7","outputId":"f2402455-75ca-4bbd-dc27-08d70329c0b7","executionInfo":{"status":"ok","timestamp":1550359254408,"user_tz":480,"elapsed":307,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":79}},"cell_type":"code","source":["# GINI INDEX WAS ALREADY CALCULATED IN THE FOR LOOP\n","split[split['row'] == 1079] #ACCESING SPLIT ROW"],"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>row</th>\n","      <th>gini_d1</th>\n","      <th>gini_d2</th>\n","      <th>gini</th>\n","      <th>change</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1079</th>\n","      <td>1079</td>\n","      <td>0.247351</td>\n","      <td>0.282882</td>\n","      <td>0.263597</td>\n","      <td>0.232832</td>\n","      <td>69.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       row   gini_d1   gini_d2      gini    change  height\n","1079  1079  0.247351  0.282882  0.263597  0.232832    69.0"]},"metadata":{"tags":[]},"execution_count":154}]},{"metadata":{"colab_type":"text","id":"fCBJhG5O50M9"},"cell_type":"markdown","source":["###Answer: 0.263597"]},{"metadata":{"id":"-hIojnVz5qqh","colab_type":"text"},"cell_type":"markdown","source":["**Question 5: How much does this partitioning reduce the Gini Index over that of the overall dataset?**"]},{"metadata":{"id":"6bNB4viyGbvR","colab_type":"code","outputId":"dabdd6c6-41e7-4f50-d503-9369aa407a90","executionInfo":{"status":"ok","timestamp":1550359280013,"user_tz":480,"elapsed":300,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":79}},"cell_type":"code","source":["# IMPURITY CHANGE OR REDUCTION WAS ALREADY CALCULATED FROM LOOP\n","split[split['row'] == 1079]"],"execution_count":155,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>row</th>\n","      <th>gini_d1</th>\n","      <th>gini_d2</th>\n","      <th>gini</th>\n","      <th>change</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1079</th>\n","      <td>1079</td>\n","      <td>0.247351</td>\n","      <td>0.282882</td>\n","      <td>0.263597</td>\n","      <td>0.232832</td>\n","      <td>69.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       row   gini_d1   gini_d2      gini    change  height\n","1079  1079  0.247351  0.282882  0.263597  0.232832    69.0"]},"metadata":{"tags":[]},"execution_count":155}]},{"metadata":{"colab_type":"text","id":"1bAztR9x51bO"},"cell_type":"markdown","source":["###Answer: A change of 0.232832"]},{"metadata":{"id":"zCwUe53y5qqi","colab_type":"text"},"cell_type":"markdown","source":["**Question 6: How many 'female' rows are below your best split point? 'male' rows?**"]},{"metadata":{"colab_type":"code","id":"S1FXZrpP52Oy","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE\n","firstpart = ordered.iloc[:1079,:] #SUB DATASET OF DATA BELOW SPLITPOINT\n","secondpart = ordered.iloc[1079:,:] #SUB DATASET OF DATA BELOW SPLITPOINT"],"execution_count":0,"outputs":[]},{"metadata":{"id":"fRg4pVM9iEx7","colab_type":"code","outputId":"8718afdc-98a6-4fb4-9ca7-2001ce3b6323","executionInfo":{"status":"ok","timestamp":1550359343264,"user_tz":480,"elapsed":309,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["print(firstpart.gender.value_counts())"],"execution_count":157,"outputs":[{"output_type":"stream","text":["female    923\n","male      156\n","Name: gender, dtype: int64\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"D6OJgVu952O1"},"cell_type":"markdown","source":["###Answer: 923 Female and 156 Male below split point"]},{"metadata":{"id":"mDwI4s2i5qqj","colab_type":"text"},"cell_type":"markdown","source":["**Question 7: How many 'female' rows are above your best split point? 'male' rows?**"]},{"metadata":{"colab_type":"code","id":"JgCvniFb54pT","outputId":"ce716418-ab3c-4206-e741-876fb6c11d38","executionInfo":{"status":"ok","timestamp":1550359383927,"user_tz":480,"elapsed":392,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["# YOUR CODE HERE\n","print(secondpart.gender.value_counts())"],"execution_count":158,"outputs":[{"output_type":"stream","text":["male      754\n","female    155\n","Name: gender, dtype: int64\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"aJZyI7fr54pV"},"cell_type":"markdown","source":["###Answer: 754 Male and 155 Female above split point"]},{"metadata":{"id":"CGUOBy-R5qqm","colab_type":"text"},"cell_type":"markdown","source":["Recall that, to calculate the best split of this numeric field, you'll need to order your data by 'height', then consider the midpoint between each pair of consecutive heights as a potential split point, then calculate the Gini Index for that partitioning. You'll want to keep track of the best split point and its Gini Index (remember that you are trying to minimize the Gini Index). \n","\n","There are a lot of ways to do this. Some are very fast, others very slow. One tip to make this run quickly is, as you consecutively step through the data and calculate the Gini Index of each possible split point, keep a running total of the number of rows for each candidate that are located above and below the split point. \n","\n","Some Python tips: \n","\n","* Counter(), from the collections module, is a special dictionary for counting values of a key\n","* zip() lets you concatenate lists into a list of tuples (for example, if we have a list of the candidates and a list of transaction amounts, zip(candidate_list, transaction_amount) would give us a list of (candidate, transaction amount) pairs"]},{"metadata":{"id":"cMuzk_wx5qqn","colab_type":"text"},"cell_type":"markdown","source":["## Best Split of a Categorial Variable"]},{"metadata":{"id":"yRXQmUIw5qqo","colab_type":"text"},"cell_type":"markdown","source":["**Question 8: How many possible splits are there of the eyecolor feature?**"]},{"metadata":{"colab_type":"code","id":"6lbi_lUz551Y","outputId":"6c54e3d1-16cd-4718-b3db-e7322d8fc9a5","executionInfo":{"status":"ok","timestamp":1550359408377,"user_tz":480,"elapsed":406,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":123}},"cell_type":"code","source":["# YOUR CODE HERE\n","df['eyecolor'].value_counts()"],"execution_count":159,"outputs":[{"output_type":"execute_result","data":{"text/plain":["blue     705\n","brown    605\n","hazel    341\n","green    297\n","other     40\n","Name: eyecolor, dtype: int64"]},"metadata":{"tags":[]},"execution_count":159}]},{"metadata":{"id":"BUrxW6P3jsEj","colab_type":"code","outputId":"0713c1cd-acbd-45a4-974d-d44edc1f3e64","executionInfo":{"status":"ok","timestamp":1550359411910,"user_tz":480,"elapsed":389,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["2**(5) - 2"],"execution_count":160,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30"]},"metadata":{"tags":[]},"execution_count":160}]},{"metadata":{"colab_type":"text","id":"6PsWzGjk551a"},"cell_type":"markdown","source":["###Answer: 30 Possible Splits"]},{"metadata":{"id":"DMOJyXuR5qqp","colab_type":"text"},"cell_type":"markdown","source":["**Question 9: Which split of eyecolor best splits the female and male rows, as measured by the Gini Index?**"]},{"metadata":{"id":"1ywr1uDsl5eU","colab_type":"code","colab":{}},"cell_type":"code","source":["eyeblue = df[df['eyecolor'] == 'blue']\n","eyebrown = df[df['eyecolor'] == 'brown']\n","eyehazel = df[df['eyecolor'] == 'hazel']\n","eyegreen = df[df['eyecolor'] == 'green']\n","eyeother = df[df['eyecolor'] == 'other']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"2Vqw8wUkw9LE","colab_type":"code","outputId":"1483e833-62e7-4067-de9b-a8d8cb5847e8","executionInfo":{"status":"ok","timestamp":1550278660807,"user_tz":480,"elapsed":303,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["otherfrac = (eyeother['gender'] == 'male').sum()/(eyeother['gender'] == 'female').sum()\n","bluefrac = (eyeblue['gender'] == 'male').sum()/(eyeblue['gender'] == 'female').sum()\n","hazelfrac = (eyehazel['gender'] == 'male').sum()/(eyehazel['gender'] == 'female').sum()\n","brownfrac = (eyebrown['gender'] == 'male').sum()/(eyebrown['gender'] == 'female').sum()\n","greenfrac = (eyegreen['gender'] == 'male').sum()/(eyegreen['gender'] == 'female').sum()\n","\n","print(otherfrac, bluefrac, hazelfrac, brownfrac, greenfrac)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["1.2222222222222223 0.9637883008356546 0.8532608695652174 0.8501529051987767 0.5631578947368421\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"uhUN5gHu56UW"},"cell_type":"markdown","source":["###Answer:"]},{"metadata":{"id":"GFlcaZAUGkYV","colab_type":"code","colab":{}},"cell_type":"code","source":["#"],"execution_count":0,"outputs":[]},{"metadata":{"id":"YB97bBLx5qqq","colab_type":"text"},"cell_type":"markdown","source":["**Question 10: What is the Gini Index of this best split?**"]},{"metadata":{"colab_type":"code","id":"jI-6AsXi57A-","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"text","id":"taURI_cL57A_"},"cell_type":"markdown","source":["###Answer:"]},{"metadata":{"id":"AmBonAL6GlU7","colab_type":"code","colab":{}},"cell_type":"code","source":["#"],"execution_count":0,"outputs":[]},{"metadata":{"id":"p3G6zc3A5qqr","colab_type":"text"},"cell_type":"markdown","source":["**Question 11: How much does this partitioning reduce the Gini Index over that of the overall data set?**"]},{"metadata":{"colab_type":"code","id":"HwJdDiUy57km","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"text","id":"WIUfrsOr57kn"},"cell_type":"markdown","source":["###Answer:"]},{"metadata":{"id":"eXVMu6HXGmnM","colab_type":"code","colab":{}},"cell_type":"code","source":["#"],"execution_count":0,"outputs":[]},{"metadata":{"id":"wACAS9Dn5qqs","colab_type":"text"},"cell_type":"markdown","source":["**Question 12: How many 'female' rows and 'male' rows are in your first partition? How many 'female' rows and 'male' rows are in your second partition?**"]},{"metadata":{"id":"fELhV5jD5qqt","colab_type":"text"},"cell_type":"markdown","source":["Python tip: the combinations function of the itertools module allows you to enumerate combinations of a list. You might want to Google 'power set'."]},{"metadata":{"colab_type":"code","id":"qfh0wLk7586D","colab":{}},"cell_type":"code","source":["# YOUR CODE HERE"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"text","id":"_pkTgJ_W586F"},"cell_type":"markdown","source":["###Answer:"]},{"metadata":{"id":"U3zLNPgW5qqt","colab_type":"code","colab":{}},"cell_type":"code","source":["#"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Vz_KdyMi5qqw","colab_type":"text"},"cell_type":"markdown","source":["## Training a decision tree"]},{"metadata":{"id":"ns7JXQTe5qqw","colab_type":"text"},"cell_type":"markdown","source":["**Question 13: Using all of the features in the original dataframe read in at the top of this notebook, train a decision tree classifier that has a depth of three (including the root node and leaf nodes). What is the accuracy of this classifier on the training data?**"]},{"metadata":{"id":"Y04JTJnQ5qqx","colab_type":"text"},"cell_type":"markdown","source":["Scikit-learn classifiers require class labels and features to be in numeric arrays. As such, you will need to turn your categorical features into numeric arrays using DictVectorizer. This is a helpful notebook for understanding how to do this: http://nbviewer.ipython.org/gist/sarguido/7423289. You can turn a pandas dataframe of features into a dictionary of the form needed by DictVectorizer by using df.to_dict('records'). Make sure you remove the class label first (in this case, gender). If you use the class label as a feature, your classifier will have a training accuracy of 100%! The example notebook link also shows how to turn your class labels into a numeric array using sklearn.preprocessing.LabelEncoder()."]},{"metadata":{"id":"rLJV8Gmu0Phr","colab_type":"code","colab":{}},"cell_type":"code","source":["X = df.loc[:, df.columns != 'gender'] #creating dataframe withouth label attribute\n","y = df.iloc[:,[0]] #creating dataframe of label only\n","dictx = X.transpose().to_dict().values() #transforming attributes to dictionary"],"execution_count":0,"outputs":[]},{"metadata":{"id":"evrU-3zN2a8D","colab_type":"code","colab":{}},"cell_type":"code","source":["#Transforming dictionary to vectors\n","vec = DictVectorizer()\n","dictx = vec.fit_transform(dictx).toarray()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"bd-OObI13l08","colab_type":"code","outputId":"f76bb547-8f21-48a3-9167-f31eed00d4ea","executionInfo":{"status":"ok","timestamp":1550359660927,"user_tz":480,"elapsed":323,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":72}},"cell_type":"code","source":["#Using label encoder in label attribute\n","le = preprocessing.LabelEncoder()\n","le.fit([\"female\",\"male\"])\n","target = le.transform(y)"],"execution_count":169,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/label.py:252: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"}]},{"metadata":{"id":"rwvMcWSt0xgt","colab_type":"code","outputId":"32c13ec8-272b-4c7a-b185-d081a49653d7","executionInfo":{"status":"ok","timestamp":1550359701822,"user_tz":480,"elapsed":390,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["#FITTING AND PREDICTION USING DESICION TREE\n","clf = DecisionTreeClassifier(max_depth=3) #stopping criteria is 4 and it can stop before, gives algorithm\n","clf = clf.fit(dictx, target) #apply algorithm to data \n","y_pred = clf.predict(dictx) #predict X\n","\n","print(accuracy_score(target, y_pred))"],"execution_count":171,"outputs":[{"output_type":"stream","text":["0.8646881287726358\n"],"name":"stdout"}]},{"metadata":{"id":"No2tNWZdpCYL","colab_type":"text"},"cell_type":"markdown","source":["###Answer: Accuracy of 0.8646881287"]},{"metadata":{"id":"vUlGtizj5qq0","colab_type":"text"},"cell_type":"markdown","source":["**Question 14: Using the following code snippet, export your decision tree to graphviz and visualize it. In your write-up, write down the interpretation of the rule at each node which is used to perform the splitting.**\n","\n","In order to install graphviz, you may need to download the tool from [this website](https://graphviz.gitlab.io), and then pip3/conda install the python libraries you do not have.\n","\n","Mac users can use ```brew install graphviz``` instead of following the link, and linux users can do the same using their favourite package manager (for example, Ubuntu users can use ```sudo apt-get install graphviz```, followed by the necessary pip3/conda installations."]},{"metadata":{"id":"inS4xzPFmyU9","colab_type":"code","colab":{}},"cell_type":"code","source":["from IPython.display import Image  \n","import pydotplus \n","import pydot\n","from sklearn.externals.six import StringIO"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Wj72DPuCncE0","colab_type":"code","outputId":"362e40fe-1dd7-4138-b760-9e4174e10014","executionInfo":{"status":"ok","timestamp":1550342858165,"user_tz":480,"elapsed":8351,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":439}},"cell_type":"code","source":["!apt-get install python-pydot"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  python-pyparsing\n","Suggested packages:\n","  python-pyparsing-doc\n","The following NEW packages will be installed:\n","  python-pydot python-pyparsing\n","0 upgraded, 2 newly installed, 0 to remove and 8 not upgraded.\n","Need to get 71.7 kB of archives.\n","After this operation, 347 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-pyparsing all 2.2.0+dfsg1-2 [52.1 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/universe amd64 python-pydot all 1.2.3-1 [19.6 kB]\n","Fetched 71.7 kB in 1s (79.9 kB/s)\n","Selecting previously unselected package python-pyparsing.\n","(Reading database ... 131352 files and directories currently installed.)\n","Preparing to unpack .../python-pyparsing_2.2.0+dfsg1-2_all.deb ...\n","Unpacking python-pyparsing (2.2.0+dfsg1-2) ...\n","Selecting previously unselected package python-pydot.\n","Preparing to unpack .../python-pydot_1.2.3-1_all.deb ...\n","Unpacking python-pydot (1.2.3-1) ...\n","Setting up python-pyparsing (2.2.0+dfsg1-2) ...\n","Setting up python-pydot (1.2.3-1) ...\n"],"name":"stdout"}]},{"metadata":{"id":"ybXpznk2ovVC","colab_type":"code","outputId":"031b7139-3ad4-49ae-f91e-0d72bdf7e98d","executionInfo":{"status":"ok","timestamp":1550343051568,"user_tz":480,"elapsed":3026,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["!pip install pydotplus"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pydotplus in /usr/local/lib/python3.6/dist-packages (2.0.2)\n","Requirement already satisfied: pyparsing>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from pydotplus) (2.3.1)\n"],"name":"stdout"}]},{"metadata":{"id":"_mkoa-lkpeoG","colab_type":"code","colab":{}},"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.tree import DecisionTreeClassifier, export_graphviz\n","from sklearn.externals.six import StringIO\n","from IPython.display import Image\n","import pydotplus"],"execution_count":0,"outputs":[]},{"metadata":{"id":"862J60w4pq0O","colab_type":"code","outputId":"ed22f603-89fe-492c-9631-84747240b7d1","executionInfo":{"status":"ok","timestamp":1550343138652,"user_tz":480,"elapsed":920,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":514}},"cell_type":"code","source":["dot_data = StringIO()\n","export_graphviz(clf, out_file=dot_data)\n","graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \n","Image(graph.create_png())"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"image/png":"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\nL+7cuZOUlMTlcm/fvn3q1Kl//OMfEp4PJNfW59wMDQ0JIVVVVcI1HA6ntrbWyMiorYcuKyuLiIhY\nuHDhuHHjNDU1LSwsYmJiSktLd+7cSQihKnz9+rWwPJPJNDc3z8vLa8fHBJklB+08LS0tKyur0asc\nReno6Ozfv7+4uJjD4eTl5f3www+EkD59+hC0c4C/yf1QIL6ziz8hAkhCDjpRW9nb2ysrKz979qzj\nVQFInQrdAYDi2rRp0507d+bMmVNdXW1kZOTt7b19+3apH4V6zk3y8hYWFlpaWqIzSD9//pwQMmjQ\noLYeOjc3t6Ghgfo2RdHW1tbX16fuT2Oz2f369cvJyRHdpb6+XkdHp60HAlkmB+384MGDV69epeZT\nFNq+ffv27dszMzNHjBjRqDz1MKebmxtBOwf4myIMBWI6u/gTIoAk5KATtRWfz+fz+XizA8gm3I8A\ntMnOzs7Ly3v16hWPxyssLNy7d6+enh7dQREVFZUvvvgiJSWFz+dTa86fP89gMKZMmdLWqkxMTAgh\nZWVlwjUfPnx48+YN9bIrQoiPj8+9e/devHhBLXI4nIKCArweT87IQTuPjY0VnWiKmkCReml80yQC\nISQmJsbCwsLFxYVaRDsHIIoxFIjp7K2eEAFaJQedqFUTJkwQXczMzBQIBGPGjJFCoADShjwC0Gbp\n0qVmZmbUzEwyZf369RUVFRs3bqypqUlPT9+5c+ecOXM++eQTauuGDRt0dHQuXbrUaj0WFhZubm4x\nMTEpKSlcLreoqMjf358Q8s0331AFVq5caW5uPmfOnMLCwsrKyqCgIC6XGxwc3HkfDbqe3LdzQsio\nUaMKCgrq6+vz8/NXr1595cqVgwcPUg+jErRzAEKIYgwFYjp7qydEgFYpQicqKSmJi4t79+4dj8dL\nT0+fP3++mZnZ4sWLOzN8gPZq6dUmoIA8PT09PT277HDJycnUTGwUVVVVW1vbEydOCASCPXv2UM+b\naWhoTJkyJTo6WkNDgxDSr1+/vLy8AwcOaGtrE0LMzc2fPXvWqLBUYvvrr79GjRqlpqZmZGS0Zs0a\namofyvr167W0tC5evEgtpqenOzk5CZ+CMzQ0dHR0/Ouvv6itr1+/DgwMtLa2VlNTY7PZwinohIqK\nimbMmKGnp6empjZq1Kjz589LJX7JEULi4+O7+KCyTOq9QD7auSjRHyEp7u7uurq6Kioqenp6X375\n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\n3c2vAAAAAElFTkSuQmCC\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{"tags":[]},"execution_count":35}]},{"metadata":{"id":"kCLgmBHx5qq4","colab_type":"text"},"cell_type":"markdown","source":["**Question 15 (Extra Credit): For each of your leaf nodes, specify the percentage of 'female' rows in that node (out of the total number of rows at that node).**"]},{"metadata":{"id":"dYme6csJ5qq5","colab_type":"text"},"cell_type":"markdown","source":["See this notebook for the basics of training a decision tree in scikit-learn and exporting the outputs to view in graphviz: http://nbviewer.ipython.org/gist/tebarkley/b68c04d9b31e64ce6023"]},{"metadata":{"id":"dXkc4cNl5qq5","colab_type":"code","colab":{}},"cell_type":"code","source":["#\n","from collections import Counter\n","\n","#get the leaf for each training sample\n","leaves_index = clf.apply(dictx) \n","\n","#use Counter to find the number of elements on each leaf\n","cnt = Counter(leaves_index)\n","\n","#and now you can index each input to get the number of elements\n","elems = [cnt[x] for x in leaves_index] "],"execution_count":0,"outputs":[]},{"metadata":{"id":"nddvck967iip","colab_type":"code","outputId":"82095877-7df4-4754-9218-f37851686988","executionInfo":{"status":"ok","timestamp":1550351372799,"user_tz":480,"elapsed":725,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":397}},"cell_type":"code","source":["elements = pd.DataFrame(elems)\n","elements.hist(bins=100)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f25f50bba58>]],\n","      dtype=object)"]},"metadata":{"tags":[]},"execution_count":67},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"qiMKZY7JE0OT","colab_type":"code","outputId":"b9294afd-cb4d-42c7-b136-91b714ee944e","executionInfo":{"status":"ok","timestamp":1550352103398,"user_tz":480,"elapsed":334,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":175}},"cell_type":"code","source":["strings = elements[0].apply(str)\n","strings.value_counts()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["830    830\n","379    379\n","233    233\n","192    192\n","142    142\n","137    137\n","48      48\n","27      27\n","Name: 0, dtype: int64"]},"metadata":{"tags":[]},"execution_count":68}]},{"metadata":{"id":"KkFKefONL86J","colab_type":"code","colab":{}},"cell_type":"code","source":["elements['leaf node'] = strings"],"execution_count":0,"outputs":[]},{"metadata":{"id":"3N71Z-mBMCbG","colab_type":"code","colab":{}},"cell_type":"code","source":["noded_data = df.copy()\n","noded_data['leaf node'] = elements['leaf node']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"NJs0Sl5cMDFk","colab_type":"code","colab":{}},"cell_type":"code","source":["leaf830 = noded_data[noded_data['leaf node'] == '830']\n","leaf379 = noded_data[noded_data['leaf node'] == '379']\n","leaf233 = noded_data[noded_data['leaf node'] == '233']\n","leaf192 = noded_data[noded_data['leaf node'] == '192']\n","leaf142 = noded_data[noded_data['leaf node'] == '142']\n","leaf137 = noded_data[noded_data['leaf node'] == '137']\n","leaf48 = noded_data[noded_data['leaf node'] == '48']\n","leaf27 = noded_data[noded_data['leaf node'] == '27']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"7FOQZ56cdRLx","colab_type":"code","outputId":"6855e0a5-cda0-4b5f-a10f-3ab241b6898c","executionInfo":{"status":"ok","timestamp":1550356756799,"user_tz":480,"elapsed":344,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["(leaf830['gender'] == 'male').sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["56"]},"metadata":{"tags":[]},"execution_count":85}]},{"metadata":{"id":"NCpOv8Kqj4xj","colab_type":"code","colab":{}},"cell_type":"code","source":["#LIST OF DATAFRAMES TO ITERATE FROM\n","allclusters = [cluster5_0, cluster5_1, cluster5_2, cluster5_3, cluster5_4, cluster5_5, cluster5_6, cluster5_7]\n","name = ['cluster5_0', 'cluster5_1', \"cluster5_2\", \"cluster5_3\", \"cluster5_4\", \"cluster5_5\", \"cluster5_6\", \"cluster5_7\"]\n","\n","k = 0\n","\n","#Ratio \"FOR\" LOOP: \n","for clusters in allclusters:\n","    funnynorm = clusters['q12'].sum() / ((clusters['q13']).sum() + clusters['q12'].sum())\n","    print(name[k], \": \", funnynorm)\n","    k = k + 1"],"execution_count":0,"outputs":[]},{"metadata":{"id":"qae66sagRVmz","colab_type":"code","colab":{}},"cell_type":"code","source":["\n","femalemale = {}\n","allclusters = [leaf830, leaf379, leaf233, leaf192, leaf142, leaf137, leaf48, leaf27]\n","columnnames = [\"leaf830\", \"leaf379\", \"leaf233\", \"leaf192\", \"leaf142\", \"leaf137\", \"leaf48\", \"leaf27\"]\n","k = 0\n","\n","for clusters in allclusters:\n","  #rows represent split point\n","  male = (clusters['gender'] == 'male').sum()\n","  female = (clusters['gender'] == 'female').sum()\n","  \n","  femalemale[columnnames[k]] = [male,female]\n","  \n","  k = k + 1\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"NAdXt-DOc5T1","colab_type":"code","outputId":"35c981e2-e5ed-4899-99a2-6ab6b788a06a","executionInfo":{"status":"ok","timestamp":1550358438801,"user_tz":480,"elapsed":301,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}},"colab":{"base_uri":"https://localhost:8080/","height":158}},"cell_type":"code","source":["femalemale"],"execution_count":142,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'leaf137': [121, 16],\n"," 'leaf142': [45, 97],\n"," 'leaf192': [85, 107],\n"," 'leaf233': [196, 37],\n"," 'leaf27': [5, 22],\n"," 'leaf379': [366, 13],\n"," 'leaf48': [36, 12],\n"," 'leaf830': [56, 774]}"]},"metadata":{"tags":[]},"execution_count":142}]},{"metadata":{"id":"47wyNh0zgAA2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":203},"outputId":"da722a57-cef4-4ab7-d21c-279f09171ff3","executionInfo":{"status":"ok","timestamp":1550358445796,"user_tz":480,"elapsed":318,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["femalemalenumb = pd.DataFrame.from_dict(femalemale, orient='index')\n","femalemalenumb.columns = ['male','female']"],"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>female</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>leaf830</th>\n","      <td>56</td>\n","      <td>774</td>\n","    </tr>\n","    <tr>\n","      <th>leaf379</th>\n","      <td>366</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>leaf233</th>\n","      <td>196</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>leaf192</th>\n","      <td>85</td>\n","      <td>107</td>\n","    </tr>\n","    <tr>\n","      <th>leaf142</th>\n","      <td>45</td>\n","      <td>97</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         male  female\n","leaf830    56     774\n","leaf379   366      13\n","leaf233   196      37\n","leaf192    85     107\n","leaf142    45      97"]},"metadata":{"tags":[]},"execution_count":143}]},{"metadata":{"id":"Q22bKYmHjSNH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":295},"outputId":"40732d03-d038-4c3b-ab49-232f5a3ebeab","executionInfo":{"status":"ok","timestamp":1550358468105,"user_tz":480,"elapsed":306,"user":{"displayName":"Pedro Junior Vicente Valdez","photoUrl":"https://lh5.googleusercontent.com/-dmH1Mj72Wlc/AAAAAAAAAAI/AAAAAAAAAAk/dLWhjPglJRo/s64/photo.jpg","userId":"10490573767420939040"}}},"cell_type":"code","source":["femalemalenumb"],"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>female</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>leaf830</th>\n","      <td>56</td>\n","      <td>774</td>\n","    </tr>\n","    <tr>\n","      <th>leaf379</th>\n","      <td>366</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>leaf233</th>\n","      <td>196</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>leaf192</th>\n","      <td>85</td>\n","      <td>107</td>\n","    </tr>\n","    <tr>\n","      <th>leaf142</th>\n","      <td>45</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>leaf137</th>\n","      <td>121</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>leaf48</th>\n","      <td>36</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>leaf27</th>\n","      <td>5</td>\n","      <td>22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         male  female\n","leaf830    56     774\n","leaf379   366      13\n","leaf233   196      37\n","leaf192    85     107\n","leaf142    45      97\n","leaf137   121      16\n","leaf48     36      12\n","leaf27      5      22"]},"metadata":{"tags":[]},"execution_count":144}]},{"metadata":{"id":"lrrGsGIQjTgS","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}